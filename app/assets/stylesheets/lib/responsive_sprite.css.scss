// https://gist.github.com/apauly/7917906

@mixin responsive-sprite($map, $icon){
  $icon-file: sprite-file($map, $icon);
  $icon-width: image-width($icon-file);
  $icon-height: image-height($icon-file);

  $sprite-file: sprite-path($map);
  $sprite-width: image-width($sprite-file);
  $sprite-height: image-height($sprite-file);

  $space-top: floor(nth(sprite-position($map, $icon), 2));
  @if $space-top == 0 {
    $space-top: 0px
  }

  width:percentage($sprite-width / $icon-width);
  display: block;
  height: 0;
  padding-bottom: percentage($icon-height / $icon-width);
  background-size: 100%;
  background-position:0 percentage(
    -1 * $space-top / ( $sprite-height - $icon-height )
  );
}

// TODO: it should have a better way to do this, with regex maybe?
.sprites-downside-unproductive
  {@include responsive-sprite($sprites-sprites, downside-unproductive);}
.sprites-downside-condemner
  {@include responsive-sprite($sprites-sprites, downside-condemner);}
.sprites-downside-unfair
  {@include responsive-sprite($sprites-sprites, downside-unfair);}
.sprites-downside-expensive
  {@include responsive-sprite($sprites-sprites, downside-expensive);}

.sprites-partner-meurio
  {@include responsive-sprite($sprites-sprites, partner-meurio);}
.sprites-partner-ddh
  {@include responsive-sprite($sprites-sprites, partner-ddh);}
.sprites-partner-dpq
  {@include responsive-sprite($sprites-sprites, partner-dpq);}
.sprites-partner-gtnm
  {@include responsive-sprite($sprites-sprites, partner-gtnm);}
.sprites-partner-paporeto
  {@include responsive-sprite($sprites-sprites, partner-paporeto);}

.sprites-steps-1-civil
  {@include responsive-sprite($sprites-sprites, steps-1-civil);}
.sprites-steps-4-militares
  {@include responsive-sprite($sprites-sprites, steps-4-militares);}
.sprites-steps-5-civis
  {@include responsive-sprite($sprites-sprites, steps-5-civis);}
.sprites-steps-10-militares
  {@include responsive-sprite($sprites-sprites, steps-10-militares);}
